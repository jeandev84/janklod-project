
if(isset($this->bindings[$abstract]['concrete']))

if($this->isClosure($this->getConcrete($abstract)))
{
    return call_user_func_array($this->getConcrete($abstract), [$this, $parameters]);
}

$reflectedClass = new \ReflectionClass($abstract);


if(! $reflectedClass->isInstantiable())
{
     throw $this->createNotInstantiableException(
         sprintf('Class (%s) is not instantiable!', $reflectedClass->getName())
     );
}

$constructor = $reflectedClass->getConstructor();

if(is_null($constructor))
{
     return $reflectedClass->newInstance();
}

$dependencies = (array) $parameters;

if(empty($parameters))
{
     $dependencies = $this->getDependencies(
         $this->getMethodParameters($constructor)
     );
}

return $reflectedClass->newInstanceArgs($dependencies);
